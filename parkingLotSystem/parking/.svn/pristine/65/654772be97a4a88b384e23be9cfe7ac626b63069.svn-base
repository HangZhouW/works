package com.parking.dao.impl;

import java.sql.SQLException;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.parking.dao.CarRecordDao;
import com.parking.entity.CarRecord;

public class CarRecordDaoImpl extends HibernateDaoSupport implements
		CarRecordDao {
	/*根据id获得记录*/
	@Override
	public CarRecord getCRById(Integer cr_id) {
		return getHibernateTemplate().get(CarRecord.class, cr_id);
	}
	/* 添加记录 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	@Override
	public void insertCarRecord(final CarRecord cr) {
		getHibernateTemplate().execute(new HibernateCallback() {
			@Override
			public Object doInHibernate(Session session)
					throws HibernateException, SQLException {
				String hql = "insert into CarRecord(id,space_id,user_id,parkingtime,totalprice,intime) values(record_seq.nextval,?,?,?,?,?)";
				Query query = session.createSQLQuery(hql)
						.setInteger(0, cr.getParkingSpace().getId())
						.setInteger(1, cr.getUser().getId())
						.setFloat(2, cr.getParkingTime())
						.setFloat(3, cr.getTotalPrice())
						.setDate(4, cr.getIntime());
				return query.executeUpdate();
			}
		});
	}

	/* 恢复车位为空的状态 */
	@Override
	public int updateCSByUserId(Integer user_id) {
		String hql = "update ParkingSpace ps set ps.user.id=null,ps.intime=null,ps.status=0 where ps.user.id=?";
		return getHibernateTemplate().bulkUpdate(hql, user_id);
	}
	/*查询用户停车记录*/
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<CarRecord> getCRListByUserId(final int begin,final int pageSize,final Integer user_id) {
		return getHibernateTemplate().execute(new HibernateCallback() {
			@Override
			public Object doInHibernate(Session session)
					throws HibernateException, SQLException {
				String hql = "from CarRecord cr where cr.user.id=:userId order by cr.id desc";
				Query query = session.createQuery(hql).setInteger("userId", user_id).setFirstResult(begin)
						.setMaxResults(pageSize);
				return query.list();
			}
		});
	}
	/*根据用户id查询停车记录总数*/
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public Long countUserCR(final Integer user_id) {
		return getHibernateTemplate().execute(new HibernateCallback() {
			@Override
			public Object doInHibernate(Session session)
					throws HibernateException, SQLException {
				Long userRcCount=(Long) session.createQuery("select count(*) from CarRecord cr where cr.user.id=:userId").setInteger("userId", user_id).uniqueResult();
				return userRcCount;
			}
		});
	}
	/*删除停车记录*/
	@Override
	public void delUserCR(Integer cr_id) {
		getHibernateTemplate().delete(getCRById(cr_id));
	}

}
